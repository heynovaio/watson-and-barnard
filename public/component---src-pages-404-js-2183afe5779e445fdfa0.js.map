{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/font.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./src/fonts/metropolis-black.woff","webpack:///./src/fonts/metropolis-black.woff2","webpack:///./src/fonts/metropolis-bold.woff","webpack:///./src/fonts/metropolis-bold.woff2","webpack:///./src/fonts/metropolis-medium.woff","webpack:///./src/fonts/metropolis-medium.woff2","webpack:///./src/fonts/metropolis-semibold.woff","webpack:///./src/fonts/metropolis-semibold.woff2","webpack:///./src/fonts/metropolis-regular.woff","webpack:///./src/fonts/metropolis-regular.woff2","webpack:///./src/fonts/metropolis-light.woff","webpack:///./src/fonts/metropolis-light.woff2","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","m","module","exports","require","Font","core_browser_esm","styles","css","blackFont2","blackFont","boldFont2","boldFont","mediumFont2","mediumFont","semiBoldFont2","semiBoldFont","regFont2","regFont","lightFont2","lightFont","Footer","styled_base_browser_esm","target","name","Title","Logos","Image","data","_131126629","gatsby_image_default","a","fluid","placeholderImage","childImageSharp","Nav","A","Link","footer","footer_Image","to","Layout","_ref","children","react_default","Fragment","seo","description","keywords","font","propTypes","PropTypes","node","isRequired","React","createContext","object","string","func","SEO","lang","meta","site","_public_static_d_629570140_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","__webpack_require__","p","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname"],"mappings":"sIAaeA,UARM,kBACnBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAKC,MAAM,mBACXJ,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,2FCTJ,IAAsBK,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAC,SAAaA,wSC2FhCI,EArEK,kBAClBT,OAAAU,EAAA,EAAAV,CAACU,EAAA,EAAD,CACEC,OAAQC,YAAF,gNAiBSC,IAjBT,wBAiB4CC,IAjB5C,mGAyBSC,IAzBT,wBAyB2CC,IAzB3C,mGAiCSC,IAjCT,wBAiC6CC,IAjC7C,mGAyCSC,IAzCT,wBAyC+CC,IAzC/C,mGAiDSC,IAjDT,wBAiD0CC,IAjD1C,mGAyDSC,IAzDT,wBAyD4CC,IAzD5C,iHClBJC,EAASzB,OAAA0B,EAAA,EAAA1B,CAAA,WAAH2B,OAAA,aAAG3B,CAAH,CAAA4B,KAAA,SAAAjB,OAAA,qDAINkB,EAAQ7B,OAAA0B,EAAA,EAAA1B,CAAA,MAAH2B,OAAA,aAAG3B,CAAH,CAAA4B,KAAA,UAAAjB,OAAA,sGAOLmB,EAAQ9B,OAAA0B,EAAA,EAAA1B,CAAA,OAAH2B,OAAA,aAAG3B,CAAH,CAAA4B,KAAA,SAAAjB,OAAA,0CAKLoB,EAAQ,WACZ,IAAMC,EAAOC,EAAAD,KAWb,OAAOhC,OAAAU,EAAA,EAAAV,CAACkC,EAAAC,EAAD,CAAKC,MAAOJ,EAAKK,iBAAiBC,gBAAgBF,SAErDG,EAAMvC,OAAA0B,EAAA,EAAA1B,CAAA,OAAH2B,OAAA,aAAG3B,CAAH,CAAA4B,KAAA,UAAAjB,OAAA,8EAMH6B,EAAIxC,OAAA0B,EAAA,EAAA1B,CAAOyC,IAAP,CAAAd,OAAA,aAAA3B,CAAH,CAAA4B,KAAA,SAAAjB,OAAA,0IASQ+B,EAAA,kBACb1C,OAAAU,EAAA,EAAAV,CAACyB,EAAD,KACEzB,OAAAU,EAAA,EAAAV,CAAC6B,EAAD,2BACA7B,OAAAU,EAAA,EAAAV,CAAC8B,EAAD,KAAO9B,OAAAU,EAAA,EAAAV,CAAC2C,EAAD,OACP3C,OAAAU,EAAA,EAAAV,CAACuC,EAAD,KACEvC,OAAAU,EAAA,EAAAV,CAACwC,EAAD,CAAGI,GAAG,WAAN,QACA5C,OAAAU,EAAA,EAAAV,CAACwC,EAAD,CAAGI,GAAG,cAAN,YACA5C,OAAAU,EAAA,EAAAV,CAACwC,EAAD,CAAGI,GAAG,WAAN,SACA5C,OAAAU,EAAA,EAAAV,CAACwC,EAAD,CAAGI,GAAG,eAAN,aACA5C,OAAAU,EAAA,EAAAV,CAACwC,EAAD,CAAGI,GAAG,aAAN,uBC9CAC,EAAS,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OACE/C,OAAAU,EAAA,EAAAV,CAAAgD,EAAAb,EAAAc,SAAA,KACEjD,OAAAU,EAAA,EAAAV,CAACkD,EAAA,EAAD,CACE9C,MAAM,8CACN+C,YAAY,wKACZC,SAAU,4FAEZpD,OAAAU,EAAA,EAAAV,CAACqD,EAAD,MACArD,OAAAU,EAAA,EAAAV,CAAA,YAAO+C,GACP/C,OAAAU,EAAA,EAAAV,CAAC0C,EAAD,QAKNG,EAAOS,UAAY,CACjBP,SAAUQ,IAAUC,KAAKC,YAGZZ,4ICpBYa,IAAMC,cAAc,IAuDvCJ,IAAUK,OACTL,IAAUM,OAAOJ,WAChBF,IAAUO,KACRP,IAAUO,qGC3DtB,SAASC,EAATjB,GAA2D,IAA5CK,EAA4CL,EAA5CK,YAAaa,EAA+BlB,EAA/BkB,KAAMC,EAAyBnB,EAAzBmB,KAAMb,EAAmBN,EAAnBM,SAAUhD,EAAS0C,EAAT1C,MACxC8D,EADiDC,EAAAnC,KACjDkC,KAeFE,EAAkBjB,GAAee,EAAKG,aAAalB,YAEzD,OACEnD,OAAAC,EAAA,EAAAD,CAACsE,EAAAnC,EAAD,CACEoC,eAAgB,CACdP,QAEF5D,MAAOA,EACPoE,cAAa,OACbP,KAAM,CACJ,CACErC,KAAI,cACJ6C,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASrE,GAEX,CACEsE,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACE7C,KAAI,eACJ6C,QAAO,WAET,CACE7C,KAAI,kBACJ6C,QAASP,EAAKG,aAAaM,QAE7B,CACE/C,KAAI,gBACJ6C,QAASrE,GAEX,CACEwB,KAAI,sBACJ6C,QAASL,IAGZQ,OACCxB,EAASyB,OAAS,EACd,CACEjD,KAAI,WACJ6C,QAASrB,EAAS0B,KAAT,OAEX,IAELF,OAAOX,KAKdF,EAAIgB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNb,SAAU,GACVD,YAAW,IAGbY,EAAIT,UAAY,CACdH,YAAaI,IAAUM,OACvBG,KAAMT,IAAUM,OAChBI,KAAMV,IAAUyB,QAAQzB,IAAUK,QAClCR,SAAUG,IAAUyB,QAAQzB,IAAUM,QACtCzD,MAAOmD,IAAUM,OAAOJ,YAGXM,2BCnGfzD,EAAAC,QAAiB0E,EAAAC,EAAuB,qFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,sFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,oFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,qFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,sFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,uFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,wFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,yFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,uFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,wFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,qFCAxC5E,EAAAC,QAAiB0E,EAAAC,EAAuB,0iDCKlCC,EAAmB,SAAArC,GAAiC,IAA9BsC,EAA8BtC,EAA9BsC,SAAUC,EAAoBvC,EAApBuC,cACpC,OAAKA,EAGE3B,IAAM4B,cAAcC,IAApBvF,OAAAwF,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiB7B,UAAY,CAC3B8B,SAAU7B,IAAUmC,MAAM,CACxBC,SAAUpC,IAAUM,OAAOJ,aAC1BA,YAGU0B","file":"component---src-pages-404-js-2183afe5779e445fdfa0.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { Global, css } from '@emotion/core';\n\nimport blackFont from '../fonts/metropolis-black.woff';\nimport blackFont2 from '../fonts/metropolis-black.woff2';\n\nimport boldFont from '../fonts/metropolis-bold.woff';\nimport boldFont2 from '../fonts/metropolis-bold.woff2';\n\nimport mediumFont from '../fonts/metropolis-medium.woff';\nimport mediumFont2 from '../fonts/metropolis-medium.woff2';\n\nimport semiBoldFont from '../fonts/metropolis-semibold.woff';\nimport semiBoldFont2 from '../fonts/metropolis-semibold.woff2';\n\nimport regFont from '../fonts/metropolis-regular.woff';\nimport regFont2 from '../fonts/metropolis-regular.woff2';\n\nimport lightFont from '../fonts/metropolis-light.woff';\nimport lightFont2 from '../fonts/metropolis-light.woff2';\n\n\nexport const Font = () => (\n  <Global\n    styles={css`\n\n      h1 {\n        font-family: metropolis, sans-serif;\n        font-weight: 600;\n      }\n      h3 {\n        font-family: metropolis, sans-serif;\n        font-weight: 700;\n      }\n      p {\n        font-family: metropolis, sans-serif;\n        font-weight: 500;\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${blackFont2}) format('woff'), url(${blackFont}) format('woff');\n        font-weight: 900;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${boldFont2}) format('woff'), url(${boldFont}) format('woff');\n        font-weight: 800;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${mediumFont2}) format('woff'), url(${mediumFont}) format('woff');\n        font-weight: 600;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${semiBoldFont2}) format('woff'), url(${semiBoldFont}) format('woff');\n        font-weight: 700;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${regFont2}) format('woff'), url(${regFont}) format('woff');\n        font-weight: 500;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${lightFont2}) format('woff'), url(${lightFont}) format('woff');\n        font-weight: 400;\n        font-style: normal;\n\n      }\n\n    `}\n  />\n);\n\nexport default Font;\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from '@emotion/styled'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Footer = styled.section`\n  background-color: #ffffff;\n  padding: 31px 20px 50px;\n`\nconst Title = styled.h2`\n  font-family: astoria, sans-serif;\n  font-size: 36px;\n  font-weight: normal;\n  text-align: center;\n  color: #505d68;\n`\nconst Logos = styled.div`\n  max-width: 565px;\n  margin: 9px auto 25px;\n`\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"logos@3x.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 565) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  max-width: 480px;\n  margin: 0 auto;\n`\nconst A = styled(Link)`\n  font-family: metropolis, sans-serif;\n  font-size: 12px;\n  font-weight: bold;\n  text-align: center;\n  color: #505d68;\n  text-decoration: none;\n  display: block;\n`\nexport default () => (\n  <Footer>\n    <Title>Watson and Barnard</Title>\n    <Logos><Image/></Logos>\n    <Nav>\n      <A to='/index/'>HOME</A>\n      <A to='/services/'>SERVICES</A>\n      <A to='/about/'>ABOUT</A>\n      <A to='/resources/'>RESOURCES</A>\n      <A to='/contact/'>CONTACT</A>\n    </Nav>\n  </Footer>\n)\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Font from \"./font\"\nimport \"./layout.css\"\nimport Footer from \"./footer\"\nimport SEO from \"../components/seo\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <SEO\n        title=\"Watson &amp; Barnard Land Surveyors &amp; Engineers\"\n        description=\"We are a private land survey firm situated in Delta, BC, Canada that has been serving the Lower Mainland and surrounding areas including Washington State since 1989.\"\n        keywords={[`land surveyors`,`Delta`,`engineers`,`land survey`,`Washington`,`BCLS`,`lower mainland`]}\n      />\n      <Font/>\n      <main>{children}</main>\n      <Footer/>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={` %s `}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n      .concat(\n        keywords.length > 0\n          ? {\n              name: `keywords`,\n              content: keywords.join(`, `),\n            }\n          : []\n      )\n      .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","module.exports = __webpack_public_path__ + \"static/metropolis-black-696141ce892a5672147db2f5b9cacddc.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-black-deeb5bb069ad929f6324edde8a32deb1.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-bold-f3aa7630f81166e48685f63287ce6ba0.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-bold-c5a399057f7a6e7dff04b0fcacc56ac6.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-medium-fec25778aa5221d58a42b778b5e4ef94.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-medium-27edad185e657fa68266faa8bb1edf04.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-semibold-15824fd24214396c828609569be79fe2.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-semibold-ada2544aab0af30093f7da6b673e33bb.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-regular-1dcc15cab6a2a03bde4cf2369b70bf04.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-regular-4fe51e67d4b00556bb6dbb4f44bffd8a.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-light-090bf4d5daa1c70b79542ee87365f82b.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-light-7b186bdcc2d7dff66eeb7fd910f66460.woff2\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}