{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/font.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/fonts/metropolis-black.woff","webpack:///./src/fonts/metropolis-black.woff2","webpack:///./src/fonts/metropolis-bold.woff","webpack:///./src/fonts/metropolis-bold.woff2","webpack:///./src/fonts/metropolis-medium.woff","webpack:///./src/fonts/metropolis-medium.woff2","webpack:///./src/fonts/metropolis-semibold.woff","webpack:///./src/fonts/metropolis-semibold.woff2","webpack:///./src/fonts/metropolis-regular.woff","webpack:///./src/fonts/metropolis-regular.woff2","webpack:///./src/fonts/metropolis-light.woff","webpack:///./src/fonts/metropolis-light.woff2","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","Object","core_browser_esm","Helmet_default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","NotFoundPage","layout","seo","m","module","exports","require","Font","styles","css","blackFont2","blackFont","boldFont2","boldFont","mediumFont2","mediumFont","semiBoldFont2","semiBoldFont","regFont2","regFont","lightFont2","lightFont","Footer","styled_base_browser_esm","target","Title","Logos","Nav","footer","gatsby_browser_entry","to","Layout","children","react_default","Fragment","font","node","React","createContext","func","__webpack_require__","p","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-404-js-1bae79ef604e615e639c.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { Global, css } from '@emotion/core';\n\nimport blackFont from '../fonts/metropolis-black.woff';\nimport blackFont2 from '../fonts/metropolis-black.woff2';\n\nimport boldFont from '../fonts/metropolis-bold.woff';\nimport boldFont2 from '../fonts/metropolis-bold.woff2';\n\nimport mediumFont from '../fonts/metropolis-medium.woff';\nimport mediumFont2 from '../fonts/metropolis-medium.woff2';\n\nimport semiBoldFont from '../fonts/metropolis-semibold.woff';\nimport semiBoldFont2 from '../fonts/metropolis-semibold.woff2';\n\nimport regFont from '../fonts/metropolis-regular.woff';\nimport regFont2 from '../fonts/metropolis-regular.woff2';\n\nimport lightFont from '../fonts/metropolis-light.woff';\nimport lightFont2 from '../fonts/metropolis-light.woff2';\n\n\nexport const Font = () => (\n  <Global\n    styles={css`\n\n      h1 {\n        font-family: metropolis, sans-serif;\n        font-weight: 600;\n      }\n      h3 {\n        font-family: metropolis, sans-serif;\n        font-weight: 700;\n      }\n      p {\n        font-family: metropolis, sans-serif;\n        font-weight: 500;\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${blackFont2}) format('woff'), url(${blackFont}) format('woff');\n        font-weight: 900;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${boldFont2}) format('woff'), url(${boldFont}) format('woff');\n        font-weight: 800;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${mediumFont2}) format('woff'), url(${mediumFont}) format('woff');\n        font-weight: 600;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${semiBoldFont2}) format('woff'), url(${semiBoldFont}) format('woff');\n        font-weight: 700;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${regFont2}) format('woff'), url(${regFont}) format('woff');\n        font-weight: 500;\n        font-style: normal;\n\n      }\n\n      @font-face {\n        font-family: 'metropolis';\n        src: url(${lightFont2}) format('woff'), url(${lightFont}) format('woff');\n        font-weight: 400;\n        font-style: normal;\n\n      }\n\n    `}\n  />\n);\n\nexport default Font;\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from '@emotion/styled'\n\nconst Footer = styled.section``\nconst Title = styled.div``\nconst Logos = styled.div``\nconst Nav = styled.nav``\nexport default () => (\n  <Footer>\n    <Title>Watson and Barnard</Title>\n    <Logos/>\n    <Nav>\n      <Link to='/index/'>Home</Link>\n      <Link to='/services/'>Services</Link>\n      <Link to='/about/'>About</Link>\n      <Link to='/resources/'>Resources</Link>\n      <Link to='/contact/'>Contact</Link>\n    </Nav>\n  </Footer>\n)\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Font from \"./font\"\nimport \"./layout.css\"\nimport Footer from \"./footer\"\n// const data = useStaticQuery(graphql`\n//   query SiteTitleQuery {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//   }\n// `)\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Font/>\n      <main>{children}</main>\n      <Footer/>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = __webpack_public_path__ + \"static/metropolis-black-696141ce892a5672147db2f5b9cacddc.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-black-deeb5bb069ad929f6324edde8a32deb1.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-bold-f3aa7630f81166e48685f63287ce6ba0.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-bold-c5a399057f7a6e7dff04b0fcacc56ac6.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-medium-fec25778aa5221d58a42b778b5e4ef94.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-medium-27edad185e657fa68266faa8bb1edf04.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-semibold-15824fd24214396c828609569be79fe2.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-semibold-ada2544aab0af30093f7da6b673e33bb.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-regular-1dcc15cab6a2a03bde4cf2369b70bf04.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-regular-4fe51e67d4b00556bb6dbb4f44bffd8a.woff2\";","module.exports = __webpack_public_path__ + \"static/metropolis-light-090bf4d5daa1c70b79542ee87365f82b.woff\";","module.exports = __webpack_public_path__ + \"static/metropolis-light-7b186bdcc2d7dff66eeb7fd910f66460.woff2\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}